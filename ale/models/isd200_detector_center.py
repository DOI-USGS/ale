# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ale.models.base_model_ import Model
from ale import util


class ISD200DetectorCenter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, line: float=None, sample: float=None):  # noqa: E501
        """ISD200DetectorCenter - a model defined in OpenAPI

        :param line: The line of this ISD200DetectorCenter.  # noqa: E501
        :type line: float
        :param sample: The sample of this ISD200DetectorCenter.  # noqa: E501
        :type sample: float
        """
        self.openapi_types = {
            'line': float,
            'sample': float
        }

        self.attribute_map = {
            'line': 'line',
            'sample': 'sample'
        }

        self._line = line
        self._sample = sample

    @classmethod
    def from_dict(cls, dikt) -> 'ISD200DetectorCenter':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ISD200_detector_center of this ISD200DetectorCenter.  # noqa: E501
        :rtype: ISD200DetectorCenter
        """
        return util.deserialize_model(dikt, cls)

    @property
    def line(self) -> float:
        """Gets the line of this ISD200DetectorCenter.


        :return: The line of this ISD200DetectorCenter.
        :rtype: float
        """
        return self._line

    @line.setter
    def line(self, line: float):
        """Sets the line of this ISD200DetectorCenter.


        :param line: The line of this ISD200DetectorCenter.
        :type line: float
        """
        if line is None:
            raise ValueError("Invalid value for `line`, must not be `None`")  # noqa: E501

        self._line = line

    @property
    def sample(self) -> float:
        """Gets the sample of this ISD200DetectorCenter.


        :return: The sample of this ISD200DetectorCenter.
        :rtype: float
        """
        return self._sample

    @sample.setter
    def sample(self, sample: float):
        """Sets the sample of this ISD200DetectorCenter.


        :param sample: The sample of this ISD200DetectorCenter.
        :type sample: float
        """
        if sample is None:
            raise ValueError("Invalid value for `sample`, must not be `None`")  # noqa: E501

        self._sample = sample
